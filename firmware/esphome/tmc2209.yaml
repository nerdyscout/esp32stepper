
external_components:
  - source: github://slimcdk/esphome-custom-components
    components: [tmc2209_hub, tmc2209, stepper]
#  - source:
#      type: local
#      path: components

esphome:
  name: esp32stepper
  project:
    name: nerdyscout.esp32stepper
    version: "1.1"
  platformio_options:
    board_build.flash_mode: dio
    upload_speed: 921600
  on_boot:
    - tmc2209.configure:
        microsteps: 4
        direction: clockwise
        interpolation: true
    - tmc2209.currents:
        irun: 16
        ihold: 0
        tpowerdown: 0
        iholddelay: 0
        standstill_mode: freewheeling

    - output.turn_off: #Microstep resolution configuration (internal pull-down resistors: MS2, MS1: 00: 1/8, 01: 1/32, 10: 1/64 11: 1/16
        id: MS1_pin
    - output.turn_off:
        id: MS2_pin

      #set PD voltage  # 5V  9V  12V  15V  20V
    - output.turn_off: # 1   0    0    0    0
        id: CFG1_pin
    - output.turn_on: # -   0    0    1    1
        id: CFG2_pin
    - output.turn_off: # -   0    1    1    0
        id: CFG3_pin

esp32:
  board: esp32-s3-devkitc-1
  #  variant: esp32s3
  framework:
    type: arduino

  # This should point to the public location of this yaml file.
dashboard_import:
  package_import_url: github://nerdyscout/esp32stepper/firmware/esphome/tmc2209.yaml#main
  import_full_config: false # or true

ota:
  platform: esphome
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

web_server:
  version: 3
  port: 80

captive_portal:

mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_username
  password: !secret mqtt_password

api:
  password: !secret api_password

logger:
#  level: DEBUG

i2c:
  sda: GPIO46
  scl: GPIO45
  scan: true
#  id: bus_a

uart:
  - id: serial_extern
    tx_pin: GPIO43
    rx_pin: GPIO44
    baud_rate: 115200
  - id: serial_stepper
    tx_pin: GPIO17
    rx_pin: GPIO18
    baud_rate: 115200

tmc2209_hub:
  id: tmc_hub
  uart_id: serial_stepper

output:
  - platform: gpio
    pin: GPIO21
    id: MS1_pin
  - platform: gpio
    pin: GPIO13
    id: MS2_pin

  - platform: gpio
    pin: GPIO14
    id: CFG1_pin
  - platform: gpio
    pin: GPIO12
    id: CFG2_pin
  - platform: gpio
    pin: GPIO11
    id: CFG3_pin

light:
  - platform: neopixelbus
    type: GRB
    variant: WS2812
    pin: GPIO10
    num_leds: 2
    id: led_rgb
  - platform: partition
    name: "RGB LED 1"
    segments:
      - id: led_rgb
        from: 0
        to: 0
  - platform: partition
    name: "RGB LED 2"
    segments:
      - id: led_rgb
        from: 1
        to: 1

stepper:
  - platform: tmc2209
    id: driver
    tmc2209_hub_id: tmc_hub
    max_speed: 800 steps/s
    acceleration: 1500 steps/s^2
    deceleration: 1500 steps/s^2
    rsense: 100 mOhm
    vsense: False
    enn_pin: GPIO09 # Enable not input pin for the driver.
    diag_pin: GPIO08 # Error signaling from the driver.
    index_pin: GPIO07 # Serves as stepping feedback from the internal step pulse generator
    step_pin: GPIO02 # Provides stepping pulses to the driver.
    dir_pin: GPIO04 # Controls direction of the motor.
    on_status:
      - logger.log:
          format: "Driver is reporting an update! (code %d)"
          args: ["code"]
# only supported by TMC2209
    on_stall:
      - logger.log: "Motor stalled!"
      - stepper.stop: driver
      - light.turn_on:
          id: led_rgb
          transition_length: 0s
      - delay: 250ms
      - light.turn_off:
          id: led_rgb
          transition_length: 1s

button:
  - platform: restart
    name: Restart

  - platform: template
    name: Stop
    on_press:
      - stepper.stop: driver

binary_sensor:
  - platform: gpio
    name: Button 1
    pin:
      number: GPIO47
      mode: INPUT
      inverted: true
    id: btn1
    filters:
      - delayed_on: 10ms

  - platform: gpio
    name: Button 2
    id: btn2
    pin:
      number: GPIO48
      mode: INPUT
      inverted: true
    filters:
      - delayed_on: 10ms

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    lambda: |-
      it.print(0, 0, id(roboto), "Hello World!");

sensor:
  #  - platform: bme280_i2c
  #    update_interval: 10s
  #    temperature:
  #      name: "BME280 Temperature"
  #    pressure:
  #      name: "BME280 Pressure"
  #    humidity:
  #      name: "BME280 Humidity"

  - platform: adc
    name: "VBUS Voltage"
    pin: GPIO05
    update_interval: 2s
    attenuation: 12dB
    filters:
      - multiply: 8.47742

  - platform: tmc2209
    type: motor_load
    name: Motor load
    update_interval: 250ms

  - platform: rotary_encoder
    name: "Rotary Encoder"
    pin_a: GPIO15
    pin_b: GPIO16
    pin_reset: GPIO03
    id: rotary
#    on_value:
#      then:
#        - stepper.set_target:
#            id: driver
#            target: !lambda "return id(rotary)->current_position;"

number:
  - platform: template
    name: Target position
    min_value: -10000
    max_value: 10000
    step: 10
    lambda: return id(driver)->current_position;
    update_interval: 1s
    set_action:
      - stepper.set_target:
          id: driver
          target: !lambda "return x;"

font:
  - file: "gfonts://Roboto"
    id: roboto
    size: 10
